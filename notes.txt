Nontrivial C++ patterns

	std::unique_ptr and std::move
	default/deleted constructors
	.emplace
	brace initialization
	lambdas and predicates

Rationale:
	Trying to keep things simple, sometimes at the expense of doing things "properly" or efficiently
	no templates, no shared pointers
	
What it is
	A tutorial on how to make the basis for a roguelike from scratch in mostly-modern C++ using a low-level OpenGL wrapper (GLFW) and few other libraries
	
What it is not
	OpenGL tutorial
	C++ tutorial
	Library to use as-is for developing your roguelike
	Best/optimal way of doing things: that has been sacrificed for simplicity

TODO: align with existing tutorial
	Part 0 - Setting Up
	Part 1 - Drawing the ‘@’ symbol and moving it around
	Part 2 - The generic Entity, the render functions, and the map
	Part 3 - Generating a dungeon
	Part 4 - Field of view
	Part 5 - Placing enemies and kicking them (harmlessly)
	Part 6 - Doing (and taking) some damage
	Part 7 - Creating the Interface
	Part 8 - Items and Inventory
	Part 9 - Ranged Scrolls and Targeting
	Part 10 - Saving and loading
	Part 11 - Delving into the Dungeon
	Part 12 - Increasing Difficulty
	Part 13 - Gearing up
