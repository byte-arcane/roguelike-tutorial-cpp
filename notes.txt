TODO: 
	first map should be premade with doors, stairs and water (and a few rats)

Nontrivial C++ patterns, to be mentioned explicitly 

	std::unique_ptr and std::move
	default/deleted constructors
	.emplace
	brace initialization
	lambdas and predicates

Structure:
==============

* Setting up
	How to display an openGL window
* Drawing player and map, and basic player input
	Tilemap, SparseBuffer, Spritemap, Input
	camera offset?
	show some non-tilemap visualization with UV colours
* Creature entities and movement
	game area is the entire screen
	db, config, and per-creature data. movement blocking. destroy entities when bumping onto each other
* User interface
	start using the UI segments (header, char area)
	character info / coords
* Field of view
	fov/los. 
* Object entities
	Add doors, dynamic blockage of movement/vision
* Delving into the dungeon
	add stairs up/down. changing-level code etc
* Game states (menu)
	how to move between states
* Item entities and inventory
	add item piles
	add the new inventory state
	have the different item categories, but don't do anything special with them yet
* Equipment, consumables & effects
	add the equip/use mode
	also pools
	this introduces the different stats, hitpoints and "combat system"
	add stats in char gui
* GUI-driven actions (ranged attack) and turn system
	add bows & attackRange parameter
	turn taking code (EndTurn & TurnSystem)
* Saving/loading
* Finishing touches: more screens/states (death, create char)
